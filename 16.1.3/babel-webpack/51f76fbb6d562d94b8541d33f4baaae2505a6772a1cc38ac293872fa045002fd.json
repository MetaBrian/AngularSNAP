{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class NavBarComponent {\n  modeSwitch() {\n    const navBarText = document.getElementById('LogoText');\n    const navBar = document.getElementById('navBar');\n    const logoButton = document.getElementById('LogoButton');\n    const contentDiv = document.getElementById('contentDiv');\n    const darkContent = document.getElementsByClassName('darkContent');\n    const darkLinks = document.getElementsByClassName('darkLinks');\n    const darkExternalLinks = document.getElementsByClassName('darkExternalLinks');\n    const lightContent = document.getElementsByClassName('lightContent');\n    const lightLinks = document.getElementsByClassName('lightLinks');\n    const lightExternalLinks = document.getElementsByClassName('lightExternalLinks');\n    if (navBarText.className === 'DarkLogoText') {\n      navBarText.className = 'LightLogoText';\n      navBar.className = 'LightNavBar';\n      logoButton.className = 'lightButton';\n      contentDiv.className = 'contentDivLight';\n      for (let i = 0; i < darkContent.length; i++) {\n        darkContent[i].className = 'lightContent';\n      }\n      for (let j = 0; j < darkLinks.length; j++) {\n        darkLinks[j].className = 'lightLinks';\n      }\n      for (let k = 0; k < darkExternalLinks.length; k++) {\n        darkExternalLinks[k].className = 'lightExternalLinks';\n      }\n    } else {\n      navBarText.className = 'DarkLogoText';\n      navBar.className = 'DarkNavBar';\n      logoButton.className = 'darkButton';\n      contentDiv.className = 'contentDivDark';\n      for (let i = 0; i < lightContent.length; i++) {\n        lightContent[i].className = 'darkContent';\n      }\n      for (let j = 0; j < lightLinks.length; j++) {\n        lightLinks[j].className = 'darkLinks';\n      }\n      for (let k = 0; k < lightExternalLinks.length; k++) {\n        lightExternalLinks[k].className = 'darkExternalLinks';\n      }\n      console.log(darkContent, darkExternalLinks, darkLinks);\n    }\n  }\n  consoleLogger() {\n    console.log('clicked');\n  }\n  newTab() {\n    window.open('https://github.com/MetaBrian/AngularSNAP', '_blank');\n  }\n}\nNavBarComponent.ɵfac = function NavBarComponent_Factory(t) {\n  return new (t || NavBarComponent)();\n};\nNavBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavBarComponent,\n  selectors: [[\"app-nav-bar\"]],\n  decls: 15,\n  vars: 0,\n  consts: [[\"id\", \"navBar\", 1, \"DarkNavBar\"], [1, \"Logo\"], [\"id\", \"LogoImage\", \"height\", \"100%\", \"src\", \"../assets/Thanos_Snap.png\", \"alt\", \"Thanos Snapping Emote\"], [\"id\", \"LogoButton\", \"routerLink\", \"/\", 1, \"darkButton\"], [\"id\", \"LogoText\", 1, \"DarkLogoText\"], [1, \"navBarButtons\"], [\"routerLink\", \"/deckbuilder\", 1, \"darkLinks\"], [\"routerLink\", \"/cardrater\", 1, \"darkLinks\"], [1, \"darkExternalLinks\", 3, \"click\"], [\"height\", \"100%\", \"src\", \"../assets/lightdark.png\", \"alt\", \"Sun & Moon symbol\"]],\n  template: function NavBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementStart(3, \"button\", 3)(4, \"h1\", 4);\n      i0.ɵɵtext(5, \"AngularSNAP!\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n      i0.ɵɵtext(8, \"Deck Builder\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 7);\n      i0.ɵɵtext(10, \"Card Rater\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function NavBarComponent_Template_button_click_11_listener() {\n        return ctx.newTab();\n      });\n      i0.ɵɵtext(12, \"GitHub\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function NavBarComponent_Template_button_click_13_listener() {\n        return ctx.modeSwitch();\n      });\n      i0.ɵɵelement(14, \"img\", 9);\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["NavBarComponent","modeSwitch","navBarText","document","getElementById","navBar","logoButton","contentDiv","darkContent","getElementsByClassName","darkLinks","darkExternalLinks","lightContent","lightLinks","lightExternalLinks","className","i","length","j","k","console","log","consoleLogger","newTab","window","open","selectors","decls","vars","consts","template","NavBarComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NavBarComponent_Template_button_click_11_listener","NavBarComponent_Template_button_click_13_listener"],"sources":["/Users/owner/AngularSNAP/AngularSNAP/src/app/components/nav-bar/nav-bar.component.ts","/Users/owner/AngularSNAP/AngularSNAP/src/app/components/nav-bar/nav-bar.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css'],\n})\nexport class NavBarComponent {\n  modeSwitch(): void {\n    const navBarText = document.getElementById('LogoText');\n    const navBar = document.getElementById('navBar');\n    const logoButton = document.getElementById('LogoButton');\n    const contentDiv = document.getElementById('contentDiv');\n\n    const darkContent = document.getElementsByClassName('darkContent');\n    const darkLinks = document.getElementsByClassName('darkLinks');\n    const darkExternalLinks =\n      document.getElementsByClassName('darkExternalLinks');\n\n      const lightContent = document.getElementsByClassName('lightContent');\n      const lightLinks = document.getElementsByClassName('lightLinks');\n      const lightExternalLinks =\n        document.getElementsByClassName('lightExternalLinks');\n\n    if (navBarText.className === 'DarkLogoText') {\n      navBarText.className = 'LightLogoText';\n      navBar.className = 'LightNavBar';\n      logoButton.className = 'lightButton';\n      contentDiv.className = 'contentDivLight';\n\n      for (let i = 0; i < darkContent.length; i++) {\n        darkContent[i].className = 'lightContent';\n      }\n\n      for (let j = 0; j < darkLinks.length; j++) {\n        darkLinks[j].className = 'lightLinks';\n      }\n\n      for (let k = 0; k < darkExternalLinks.length; k++) {\n        darkExternalLinks[k].className = 'lightExternalLinks';\n      }\n    } else {\n      navBarText.className = 'DarkLogoText';\n      navBar.className = 'DarkNavBar';\n      logoButton.className = 'darkButton';\n      contentDiv.className = 'contentDivDark';\n\n      for (let i = 0; i < lightContent.length; i++) {\n        lightContent[i].className = 'darkContent';\n      }\n\n      for (let j = 0; j < lightLinks.length; j++) {\n        lightLinks[j].className = 'darkLinks';\n      }\n\n      for (let k = 0; k < lightExternalLinks.length; k++) {\n        lightExternalLinks[k].className = 'darkExternalLinks';\n      }\n\n      console.log(darkContent, darkExternalLinks, darkLinks)\n\n    }\n  }\n\n  consoleLogger(): void {\n    console.log('clicked');\n  }\n\n  newTab(): void {\n    window.open('https://github.com/MetaBrian/AngularSNAP', '_blank');\n  }\n}\n","<div id=\"navBar\" class=\"DarkNavBar\">\n  <div class=\"Logo\">\n    <img\n      id=\"LogoImage\"\n      height=\"100%\"\n      src=\"../assets/Thanos_Snap.png\"\n      alt=\"Thanos Snapping Emote\"\n    />\n    <button id=\"LogoButton\" class=\"darkButton\" routerLink=\"/\">\n      <h1 class=\"DarkLogoText\" id=\"LogoText\">AngularSNAP!</h1>\n    </button>\n  </div>\n\n  <div class=\"navBarButtons\">\n    <button class=\"darkLinks\" routerLink=\"/deckbuilder\">Deck Builder</button>\n    <button class=\"darkLinks\" routerLink=\"/cardrater\">Card Rater</button>\n    <button (click)=\"newTab()\" class=\"darkExternalLinks\">GitHub</button>\n    <button (click)=\"modeSwitch()\" class=\"darkExternalLinks\">\n      <img\n        height=\"100%\"\n        src=\"../assets/lightdark.png\"\n        alt=\"Sun & Moon symbol\"\n      />\n    </button>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}